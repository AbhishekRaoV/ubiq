---
- name: Install k8s on cluster nodes
  hosts: auctane
  tasks:
    - name: Update Nodes
      shell: sudo apt update

    - name: Install docker
      become: true
      apt:
        name: docker.io
        state: present

    - name: Enable docker services
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Install transport https
      become: true
      apt:
        name: apt-transport-https
        state: present

    - name: Install curl
      become: true
      apt:
        name: curl
        state: present

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
      become: true

    - name: Add k8s signing key
      shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add k8s repo
      shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

    # - name: Move Files to /etc/apt/source
    #   shell: sudo mv ~/kubernetes.list /etc/apt/sources.list.d

    - name: Update nodes
      shell: sudo apt update

    - name: Install kubelet
      become: true
      apt:
        name: kubelet
        state: present

    - name: Install kubectl
      become: true
      apt:
        name: kubectl
        state: present

    - name: Install kubeadm
      become: true
      apt:
        name: kubeadm
        state: present

    - name: Install kubernetes-cni
      become: true
      apt:
        name: kubernetes-cni
        state: present

    - name: Disabling swap memory
      shell: sudo swapoff -a

    - name: Iptables See Bridged Traffic
      shell : |
        lsmod | grep br_netfilter
        sudo modprobe br_netfilter
        sudo sysctl net.bridge.bridge-nf-call-iptables=1

    - name: Restart and enable dokcer
      shell: |
        sudo systemctl enable docker
        sudo systemctl daemon-reload
        sudo systemctl restart docker

    - name: K8s init
      # delegate_to: auctane
      shell: sudo kubeadm init --pod-network-cidr=10.244.0.0/16
      register: output

    - name: Create .kube directory
      # delegate_to: auctane
      shell: |
        mkdir -p $HOME/.kube
        sudo cp /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Deploy a pod network
      # delegate_to: auctane
      shell: |
          sudo ufw allow 6443
          sudo ufw allow 6443/tcp
    - name: get join command
      # delegate_to: auctane
      shell: kubeadm token create --print-join-command
      register: output

    - name: set join command
      # delegate_to: auctane
      set_fact:
        join_command: "{{ output.stdout_lines[0] }}"

    - name: Print joinkey
      # delegate_to: auctane
      debug:
        msg: "{{ join_command }}"

    # - name: join worker to auctane
    #   shell: sudo {{ join_command }}
    #   delegate_to: "{{ item }}"
    #   loop: "{{ groups['workers'] }}"

    - name: Get kube flannel pods
      # delegate_to: auctane
      shell: |
        kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/auctane/Documentation/kube-flannel.yml 
        sleep 5
        kubectl taint node $(hostname) node-role.kubernetes.io/control-plane:NoSchedule-


    - name: Get Pods Data
      # delegate_to: auctane
      shell: kubectl get pods --all-namespaces
      register: pods

    - name: Display pods status
      debug:
        var: pods

    - name: Get Nodes Data
      # delegate_to: auctane
      shell: kubectl get nodes
      register: nodes

    - name: Display Nodes status
      debug:
        var: nodes
